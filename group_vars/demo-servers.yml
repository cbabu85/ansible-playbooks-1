---

include_vars: vault.yml
# APP Env as language agnostic variable
APP_ENV: 'demo'
GO_ENV: 'demo'
RAILS_ENV: 'demo'

# Fedora
fedora_db_user: "{{vault_fedora_user}}"
fedora_db_pwd: "{{vault_fedora_dev_pwd}}"
var_fedora_pid_namespace: 'aptrust'

ruby_version: 2.3.1

# Pharos
pharos_local_db: False
pharos_db_user: "{{ vault_pharos_dev_db_user}}"
pharos_db_pwd: "{{ vault_pharos_dev_db_pwd}}"

pharos_devise_key: "{{ vault_pharos_dev_devise_key}}"
pharos_rails_key: "{{ vault_pharos_dev_rails_key}}"
pharos_url: "https://demo.aptrust.org"

pharos_aws_ses_user: "{{vault_pharos_demo_aws_ses_user}}"
pharos_aws_ses_pwd: "{{vault_pharos_demo_aws_ses_pwd}}"

# AWS RDS
pharos_rds_instance_type: "db.t2.medium"
pharos_db_size: '16'
pharos_vpc_sec_group: "sg-18a4ac62"
pharos_rds_subnet: "demo"


# AWS EFS/DBS
# External Filesystems
use_efs: true
use_ebs: false
# EFS PROD
efs_mount_uri: "fs-97ff5bde.efs.us-east-1.amazonaws.com:/"

# Exchange Go Services
pharos_api_user: "{{vault_pharos_demo_api_user}}"
pharos_api_key: "{{vault_pharos_demo_api_pwd}}"

ex_tardirectory: "/mnt/efs/apt/data"
ex_restoredirectory: "/mnt/efs/apt/restore"
ex_logdirectory: "/mnt/efs/apt/logs"
ex_replicationdirectory: "/mnt/efs/apt/replication"
ex_maxfilesize: "100000000"
ex_skipalreadyprocessed: true
ex_deleteonsuccess: true
ex_logtostderr: false
ex_volumeserviceport: 8898
ex_loglevel: 4
ex_bucketreadercachehours: 24
ex_bagvalidationconfigfile: "config/aptrust_bag_validation_config.json"
ex_bagitversion: "0.97"
ex_bagitencoding: "utf-8"

ex_pharosurl: "{{pharos_url}}"
ex_pharosapiversion: "v2"

ex_nsqdhttpaddress: "http://demo-services.aptrust.org:4151"
ex_nsqlookupd: "demo-services.aptrust.org:4161"

ex_aptrusts3region: "us-east-1"
ex_aptrustglacierregion: "us-west-2"

ex_preservationbucket: "aptrust.test.preservation"
ex_replicationbucket: "aptrust.test.preservation.oregon"

ex_customrestorebucket: "aptrust.restore.test"
ex_restoretotestbuckets: true
ex_maxdayssincefixitycheck: 90

# This may need to loose { }
# https://www.sbarjatiya.com/notes_wiki/index.php/Working_with_lists_and_dictionary_variables_in_ansible
ex_fetchworker: {
        networkconnections: "8",
        workers: "4",
        nsqtopic: "apt_fetch_topic",
        nsqchannel: "apt_fetch_channel",
        maxattempts: "3",
        maxinflight: "20",
        heartbeatinterval: "10s",
        readtimeout: "60s",
        writetimeout: "10s",
        messagetimeout: "180m"
    }

ex_storeworker: {
        networkconnections: "16",
        workers: "8",
        nsqtopic: "apt_store_topic",
        nsqchannel: "apt_store_channel",
        maxattempts: "3",
        maxinflight: "20",
        heartbeatinterval: "10s",
        readtimeout: "60s",
        writetimeout: "10s",
        messagetimeout: "180m"
    }

ex_recordworker: {
        networkconnections: "8",
        workers: "4",
        nsqtopic: "apt_record_topic",
        nsqchannel: "apt_record_channel",
        maxattempts: "3",
        maxinflight: "20",
        heartbeatinterval: "10s",
        readtimeout: "60s",
        writetimeout: "10s",
        messagetimeout: "180m"
    }

ex_replicationworker: {
        networkconnections: "4",
        workers: "8",
        nsqtopic: "apt_replication_topic",
        nsqchannel: "apt_replication_channel",
        maxattempts: "3",
        maxinflight: "20",
        heartbeatinterval: "10s",
        readtimeout: "60s",
        writetimeout: "10s",
        messagetimeout: "180m"
    }

ex_restoreworker: {
        networkconnections: "8",
        workers: "4",
        nsqtopic: "apt_restore_topic",
        nsqchannel: "apt_restore_channel",
        maxattempts: "3",
        heartbeatinterval: "10s",
        readtimeout: "60s",
        writetimeout: "10s",
        messagetimeout: "180m"
    }

ex_filedeleteworker: {
        networkconnections: "12",
        workers: "4",
        nsqtopic: "apt_file_delete_topic",
        nsqchannel: "apt_file_delete_channel",
        maxattempts: "3",
        maxinflight: "20",
        heartbeatinterval: "10s",
        readtimeout: "60s",
        writetimeout: "10s",
        messagetimeout: "30m"
    }

ex_fixityworker: {
        networkconnections: "4",
        workers: "4",
        nsqtopic: "apt_fixity_topic",
        nsqchannel: "apt_fixity_channel",
        maxattempts: "3",
        maxinflight: "20",
        heartbeatinterval: "10s",
        readtimeout: "60s",
        writetimeout: "10s",
        messagetimeout: "180m"
    }

ex_receivingbuckets: [
        'aptrust.receiving.test.columbia.edu',
        'aptrust.receiving.test.georgetown.edu',
        'aptrust.receiving.test.indiana.edu',
        'aptrust.receiving.test.jhu.edu',
        'aptrust.receiving.test.miami.edu',
        'aptrust.receiving.test.ncsu.edu',
        'aptrust.receiving.test.psu.edu',
        'aptrust.receiving.test.syr.edu',
        'aptrust.receiving.test.uchicago.edu',
        'aptrust.receiving.test.uc.edu',
        'aptrust.receiving.test.uchicago.edu',
        'aptrust.receiving.test.uconn.edu',
        'aptrust.receiving.test.umd.edu',
        'aptrust.receiving.test.umich.edu',
        'aptrust.receiving.test.unc.edu',
        'aptrust.receiving.test.nd.edu',
        'aptrust.receiving.test.virginia.edu',
        'aptrust.receiving.test.vt.edu',
    ]

ex_dpn: {
        localnode: "aptrust",
        logdirectory: "/mnt/efs/dpn/logs",
        stagingdirectory: "/mnt/efs/dpn/staging",
        remotenodehomedirectory: "/home",
        loglevel: "4",
        logtostderr: "false",
        replicatetonumnodes: "2",
        dpnapiversion: "api-v2",
        dpnpreservationbucket: "aptrust.dpn.test",
        acceptinvalidsslcerts: "false",
        usesshwithrsync: "true",
        dpnglacierregion: "us-east-1",
# TODO: Is this relative or absolute to the go bin or go src directory?
#       We may want to move configs in the bin directory anyways. and only
#       update them if the repo has updated.
        bagvalidationconfigfile: "config/dpn_bag_validation_config.json",
        restclient: {
            comment: "settings for our local dpn rest api server. load localauthtoken from environment!",
            localserviceurl: "https://dpn-demo.aptrust.org/",
            localapiroot: "api-v2",
            localauthtoken: ""
        },
        defaultmetadata: {
            comment: "config settings for common dpn bagit metadata",
            bagitversion: "0.97",
            bagitencoding: "utf-8",
            ingestnodename: "aptrust",
            ingestnodeaddress: "160 mccormick rd., charlottesville, va 22904",
            ingestnodecontactname: "aptrust administrator",
            ingestnodecontactemail: "help@aptrust.org"
        },
    # comment: "remote node admin tokens are ignored in this config.",
        remotenodeadmintokensfortesting: {
            chron: "",
            hathi: "",
            sdr:   "",
            tdr:   ""
        },
    # comment: set these in the environment, not here. export dpn_<node>_token.,
        remotenodetokens: {
            chron: "",
            hathi: "",
            sdr:   "",
            tdr:   ""
        },
    # comment: "remote node urls in demo come from node records in the local rest service.",
        remotenodeurls: {
            chron: "",
            hathi: "",
            sdr:   "",
            tdr:   ""
        },
        dpnpackageworker: {
            networkconnections: "8",
            workers: "4",
            nsqtopic: "dpn_package_topic",
            nsqchannel: "dpn_package_channel",
            maxattempts: "3",
            maxinflight: "20",
            heartbeatinterval: "10s",
            readtimeout: "60s",
            writetimeout: "10s",
            messagetimeout: "180m"
        },
        dpnvalidationworker: {
            networkconnections: "8",
            workers: "4",
            nsqtopic: "dpn_validation_topic",
            nsqchannel: "dpn_validation_channel",
            maxattempts: "3",
            maxinflight: "20",
            heartbeatinterval: "10s",
            readtimeout: "60s",
            writetimeout: "10s",
            messagetimeout: "180m"
        },
        dpncopyworker: {
            networkconnections: "8",
            workers: "4",
            nsqtopic: "dpn_copy_topic",
            nsqchannel: "dpn_copy_channel",
            maxattempts: "3",
            maxinflight: "20",
            heartbeatinterval: "10s",
            readtimeout: "60s",
            writetimeout: "10s",
            messagetimeout: "180m"
        },
        dpningeststoreworker: {
            networkconnections: "4",
            workers: "4",
            nsqtopic: "dpn_ingest_store_topic",
            nsqchannel: "dpn_ingest_store_channel",
            maxattempts: "3",
            maxinflight: "20",
            heartbeatinterval: "10s",
            readtimeout: "60s",
            writetimeout: "10s",
            messagetimeout: "180m"
        },
        dpningestrecordworker: {
            networkconnections: "4",
            workers: "4",
            nsqtopic: "dpn_record_topic",
            nsqchannel: "dpn_record_channel",
            maxattempts: "3",
            maxinflight: "20",
            heartbeatinterval: "10s",
            readtimeout: "60s",
            writetimeout: "10s",
            messagetimeout: "180m"
        },
        dpnreplicationstoreworker: {
            networkconnections: "4",
            workers: "4",
            nsqtopic: "dpn_replication_store_topic",
            nsqchannel: "dpn_replication_store_channel",
            maxattempts: "3",
            maxinflight: "20",
            heartbeatinterval: "10s",
            readtimeout: "60s",
            writetimeout: "10s",
            messagetimeout: "180m"
        },
        dpnrestoreworker: {
            networkconnections: "4",
            workers: "4",
            nsqtopic: "dpn_restore_topic",
            nsqchannel: "dpn_restore_channel",
            maxattempts: "3",
            maxinflight: "20",
            heartbeatinterval: "10s",
            readtimeout: "60s",
            writetimeout: "10s",
            messagetimeout: "180m"
        },
    }
