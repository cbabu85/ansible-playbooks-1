---
# Deploys Pharos on staging
#
# Pre-requisites:
# This role requires a server instance that has had the allservers.docker.yml
# playbook applied. The play includes user account setup, ssh and installation
# of Docker deamon as well as Traefik setup for TLS and reverse proxy.
#
##  - Base dir: for docker apps is /srv/docker/<appname>
#     The base directory is used to clone the git repository into. Is used for
#     starting Docker app per docker-compose. Also configuration in the .env
#     file is updated upon deployment.
#   - Data dir: /data/pharos
#     The data directory is used for storing persistent data like logs between
#     redeploys.

-   hosts:
      - docker4
    vars_files:
        - "group_vars/vault.yml"

    vars:
        # Workaround for Ansible docker Python modules. https://galaxy.ansible.com/nickjj/docker
        # ansible_python_interpreter: "{{ '/usr/bin/env python-docker' if docker__pip_virtualenv | d() else ansible_python.executable }}"
        ansible_python_interpreter: "python"

        # Dockerapp config
        dockerapp: 'pharos' #Docker app name
        dockerapp_path: "/srv/docker/{{dockerapp}}"
        dockerapp_data_path: "/data/{{dockerapp}}"
        dockerapp_repo: "https://github.com/APtrust/pharos"

        # Note: If latest HEAD of branch, just provide branch. If a custom git
        # hash, both branch and hash need to be defined. e.g.:
        #  git_branch: feature/two_factor #git branch/commit
        #  git_version: 37bd0d4ef31bcc3a6ed97dba57c299ec61dbea48
        git_branch: feature/storage-record
        #        git_version: e2c8c44
        #        git_version: 5385600c983e3d07e5825731b809fd62011e332b
        DOCKER_DOMAIN: "{{ ansible_fqdn }}"

        # Pharos source env to use for a copy of the database.
        source_env: demo
        traefik_setup: true
    roles:
      - { role: aptrust.pharos }
        #      - { role: nickjj.docker, tags: docker}
    tasks:

      - name: whoami
        become: no
        local_action: shell whoami
        register: whobrokeit
        tags: [pharos,slack,deploy]

      - name: Slack to all
        slack:
          token: "{{slack_token}}"
          msg: "Deployment of Pharos Release: *{{pharos_release}}-{{pharos_branch}}* in Environment: *{{RAILS_ENV}}* on {{ inventory_hostname }} by user {{whobrokeit.stdout}} completed"
          icon_emoji: ":dog:"
          channel: 'ops'
        tags: [pharos,slack, deploy]
