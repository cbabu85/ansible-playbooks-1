---
language: python
python: "2.7"

env:
  - distribution: debian-7
  - distribution: debian-8
  - distribution: ubuntu-15.10
  - distribution: ubuntu-16.04

services:
  - docker

install:
  # Install ansible
  - pip install ansible

  # Add ansible.cfg to pick up roles path.
  - echo -e "[defaults]\nroles_path = ../" > ansible.cfg

  # Check ansible version
  - ansible --version

  # Run docker container
  - docker run -td --privileged --name ansible-${distribution} pbonrad/ansible-docker-base:${distribution}

  # Add started docker container to the inventory file
  - echo "ansible-${distribution} ansible_connection=docker" > tests/inventory

script:
  # Run syntax check
  - ansible-playbook -i tests/inventory tests/test.yml --syntax-check

  # Run playbook role to install on docker container
  - ansible-playbook -i tests/inventory tests/test.yml

  # Wait a moment until the DB is fully started
  - sleep 15

  # Get IP address for the running docker container
  - CONTAINER_IP=$(docker inspect -f '{{ .NetworkSettings.IPAddress }}' ansible-${distribution})

  # Create a new database in InfluxDB
  - curl -POST http://${CONTAINER_IP}:8086/query --data-urlencode "q=CREATE DATABASE mydb"

  # Insert some data
  - >
    curl -XPOST "http://${CONTAINER_IP}:8086/write?db=mydb"
    -d 'cpu, host=server01,region=uswest load=42 1434055562000000'
  - >
    curl -XPOST "http://${CONTAINER_IP}:8086/write?db=mydb"
    -d 'cpu, host=server02,region=uswest load=78 1434055562000000000'
  - >
    curl -XPOST "http://${CONTAINER_IP}:8086/write?db=mydb"
    -d 'cpu,host=server03,region=useast load=15.4 1434055562000000000'

  # Query for the data
  - >
    curl -G http://${CONTAINER_IP}:8086/query?pretty=true --data-urlencode "db=mydb"
    --data-urlencode "q=SELECT * FROM cpu WHERE host='server01' AND time < now() - 1d"

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
