---
# Welcome to the InfluxDB configuration file.

# Once every 24 hours InfluxDB will report usage data to usage.influxdata.com
# The data includes a random ID, os, arch, version, the number of series and other
# usage data. No data from user databases is ever transmitted.
# Change this option to "true" to disable reporting.
influxdb_reporting_disabled: "false"

###
### [meta]
###
### Controls the parameters for the Raft consensus group that stores metadata
### about the InfluxDB cluster.
###

# Where the metadata/raft database is stored
influxdb_meta_dir: "/var/lib/influxdb/meta"

influxdb_meta_retention_autocreate: "true"

# If log messages are printed for the meta service
influxdb_meta_logging_enabled: "true"
influxdb_meta_pprof_enabled: "false"

# The default duration for leases.
influxdb_meta_lease_duration: "1m0s"

###
### [data]
###
### Controls where the actual shard data for InfluxDB lives and how it is
### flushed from the WAL. "dir" may need to be changed to a suitable place
### for your system, but the WAL settings are an advanced configuration. The
### defaults should work for most systems.
###

# Controls if this node holds time series data shards in the cluster
influxdb_data_enabled: "true"

influxdb_data_dir: "/var/lib/influxdb/data"

# These are the WAL settings for the storage engine >= 0.9.3
influxdb_data_wal_dir: "/var/lib/influxdb/wal"
influxdb_data_wal_logging_enabled: "true"

###
### [retention]
###
### Controls the enforcement of retention policies for evicting old data.
###

influxdb_retention_enabled: "true"
influxdb_retention_check_interval: "30m"

###
### [shard_precreation]
###
### Controls the precreation of shards, so they are available before data arrives.
### Only shards that, after creation, will have both a start_ and end_time in the
### future, will ever be created. Shards are never precreated that would be wholly
### or partially in the past.

influxdb_shard_precreation_enabled: "true"
influxdb_shard_precreation_check_interval: "10m"
influxdb_shard_precreation_advance_period: "30m"

###
### [monitor]
###
### Controls the system self_monitoring, statistics and diagnostics.
###
### The internal database for monitoring data is created automatically if
### if it does not already exist. The target retention within this database
### is called 'monitor' and is also created with a retention period of 7 days
### and a replication factor of 1, if it does not exist. In all cases the
### this retention policy is configured as the default for the database.

# Whether to record statistics internally.
influxdb_monitor_store_enabled: "true"
# The destination database for recorded statistics
influxdb_monitor_store_database: "_internal"
# The interval at which to record statistics
influxdb_monitor_store_interval: "10s"

###
### [admin]
###
### Controls the availability of the built_in, web_based admin interface. If HTTPS is
### enabled for the admin interface, HTTPS must also be enabled on the [http] service.
###

influxdb_admin_enabled: "true"
influxdb_admin_bind_address: ":8087"
influxdb_admin_https_enabled: "false"
influxdb_admin_https_certificate: "/etc/ssl/influxdb.pem"

###
### [http]
###
### Controls how the HTTP endpoints are configured. These are the primary
### mechanism for getting data into and out of InfluxDB.
###

influxdb_http_enabled: "true"
influxdb_http_bind_address: ":8086"
influxdb_http_auth_enabled: "false"
influxdb_http_log_enabled: "true"
influxdb_http_write_tracing: "false"
influxdb_http_pprof_enabled: "false"
influxdb_http_https_enabled: "false"
influxdb_http_https_certificate: "/etc/ssl/influxdb.pem"

###
### [subscriber]
###
### Controls the subscriptions, which can be used to fork a copy of all data
### received by the InfluxDB host.
###

influxdb_subscriber_enabled: "true"

###
### [continuous_queries]
###
### Controls how continuous queries are run within InfluxDB.
###

influxdb_continuous_queries_log_enabled: "true"
influxdb_continuous_queries_enabled: "true"
