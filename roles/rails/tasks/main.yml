---
#
# Rails setup.
#


# Install libraries required for building various gems
# that our Rails app uses. Be sure to update cache first,
# since the typical Vagrant Ubuntu VM ships with an out-
# of-date apt cache.
  - name: install required packages
    sudo: yes
    apt: pkg={{item}} state=present update_cache=yes
    with_items:
        - sqlite3
        - libssl-dev
        - bundler
        - postgresql-client
        - libpq5
        - libpqxx-dev
        - libsqlite3-dev
        - nodejs
        - zip
        - mailutils
    environment:
        DEBIAN_FRONTEND: noninteractive
    tags:
        - packages
        - rails dependencies


# Check to see if the Oracle JVM version 7 is already installed.
# Install it if it's not already there.
  - name: check java version
    script: has_oracle_1.7.sh
    register: good_java

  - name: install oracle jvm
    script: install_oracle_jvm.sh
    sudo: yes
    when: not good_java.stdout == 'Yes'
    tags: packages

# rbenv and ruby-build
  - stat: path=~/.rbenv
    register: rbenv

  - name: install rbenv if not already present
    when: not rbenv.stat.exists
    git:
      repo=https://github.com/sstephenson/rbenv.git
      dest=~/.rbenv
    tags: rbenv

  - lineinfile:
      dest=~/.bash_profile
      state=present
      line='export PATH="$HOME/.rbenv/bin:$PATH"'
    tags: rbenv

  - lineinfile:
      dest=~/.bash_profile
      state=present
      line='eval "$(rbenv init -)"'


# Install ruby build
  - stat: path=~/.rbenv/plugins/ruby-build/bin/ruby-build
    register: ruby_build

  - name: install ruby-build
    git:
      repo=https://github.com/sstephenson/ruby-build.git
      dest=~/.rbenv/plugins/ruby-build
    when: not ruby_build.stat.exists
    environment:
      PATH: "{{ path }}"
    tags: rbenv

# Install Ruby 2.1.5, if it's not already there.
# ruby_version is defined in roles/rails/vars/main.yml
  - stat: path=~/.rbenv/versions/{{ ruby_version }}
    register: ruby

  - command: rbenv install {{ ruby_version }}
    when: not ruby.stat.exists
    environment:
      PATH: "{{ path }}"


# Checkout Fluctus
  - stat: path=~/aptrust/fluctus/app/models/
    register: fluctus

  - name: checkout fluctus repo
    git:
      repo=git@github.com:APTrust/fluctus.git
      dest=~/aptrust/fluctus
    when: not fluctus.stat.exists
    environment:
      PATH: "{{ path }}"
    tags: fluctus

# Set the right ruby interpreter
  - name: set ruby interpreter to {{ ruby_version }}
    command: chdir=~/aptrust/fluctus rbenv local {{ ruby_version }}
    environment:
      PATH: "{{ path }}"
    tags: rbenv

# Install bundler in local rbenv
  - name: install bundler
    command: chdir=~/aptrust/fluctus gem install bundler
    environment:
      PATH: "{{ path }}"
    tags: rails

# Load gems into the local rbenv
  - name: install items in fluctus gemfile
    command: chdir=~/aptrust/fluctus bundle install
    environment:
      PATH: "{{ path }}"
    tags: rails

# Generate Rails keys if they don't already exist
# We don't do the usual lineinfile because we don't
# want to keep overwriting the keys.
  - name: check for rails secret key
    command: grep RAILS_SECRET_KEY /home/{{ system_default_user }}/.bash_profile
    register: rails_key_present
    ignore_errors: yes

  - name: check for devise secret key
    command: grep DEVISE_SECRET_KEY ~/.bash_profile
    register: devise_key_present
    ignore_errors: yes

  - name: generate rails secret key
    shell: chdir=~/aptrust/fluctus bundle exec rake secret
    register: rails_key
    when: rails_key_present|failed
    environment:
      PATH: "{{ path }}"
    tags: rails

  - name: add rails key to bash_profile if necessary
    when: rails_key_present|failed
    lineinfile:
      dest=/home/{{ system_default_user }}/.bash_profile
      state=present
      line="export RAILS_SECRET_KEY='{{ rails_key.stdout }}'"

  - name: generate devise secret key
    shell: chdir=~/aptrust/fluctus bundle exec rake secret
    when: devise_key_present|failed
    register: devise_key
    environment:
      PATH: "{{ path }}"
    tags: rails

  - name: add devise key to bash_profile if necessary
    when: devise_key_present|failed
    lineinfile:
      dest=/home/{{ system_default_user }}/.bash_profile
      state=present
      line="export DEVISE_SECRET_KEY='{{ devise_key.stdout }}'"

# Set up Jetty/Solr
  - stat: path=~/aptrust/fluctus/jetty/lib
    register: jetty

  - name: set up jetty/solr
    script: setup_jetty.sh
    when: not jetty.stat.exists
    environment:
      PATH: "{{ path }}"
    tags: rails

  - lineinfile:
      dest=~/.bash_profile
      state=present
      line='export FEDORA_USER=fedoraAdmin'
    tags: rails

  - lineinfile:
      dest=~/.bash_profile
      state=present
      line='export FEDORA_PASS=fedoraAdmin'
    tags: rails

  - lineinfile:
      dest=~/.bash_profile
      state=present
      line="export FEDORA_URL='http://127.0.0.1:8983/fedora'"
    tags: rails


# Bring the dev and test databases up to date.
# If the the test db is not up to date, you can't run spec tests.
  - name: migrate dev database
    script: rails_migrate_db.sh
    environment:
      PATH: "{{ path }}"
    tags: rails

  - name: migrate test database
    script: rails_migrate_db.sh
    environment:
      PATH: "{{ path }}"
      RAILS_ENV: "test"
    tags: rails
