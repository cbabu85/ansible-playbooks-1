---
#
# Rails setup.
#

# Install libraries required for building various gems
# that our Rails app uses. Be sure to update cache first,
# since the typical Vagrant Ubuntu VM ships with an out-
# of-date apt cache.
  - name: install required packages
    sudo: yes
    apt: pkg={{item}} state=present update_cache=yes
    with_items:
        - sqlite3
        - libssl-dev
        - bundler
        - postgresql-client
        - libpq5
        - libpqxx-dev
        - libsqlite3-dev
        - nodejs
        - zip
        - mailutils
    environment:
       DEBIAN_FRONTEND: noninteractive
    tags:
        - packages
        - rails dependencies

# Check to see if the Oracle JVM version 7 is already installed.
# Install it if it's not already there.

# TODO: Get rid of scripts and put logic in here.
# TODO: Move this into its own role. this aint noting to do with rails.
  - name: check java version
    script: has_oracle_1.7.sh
    no_log: true
    register: good_java

# TODO: Get rid of scripts and put logic in here.
# TODO: Move this into its own role. this aint noting to do with rails.
  - name: install oracle jvm
    script: install_oracle_jvm.sh
    sudo: yes
    no_log: true
    when: not good_java.stdout == 'Yes'
    tags: packages

  - name: checkout fluctus repo
    become: yes
    become_user: "{{ system_default_user }}"
    git:
      repo=git@github.com:APTrust/fluctus.git
      dest=/var/www/{{ ansible_fqdn }}/fluctus
      version=0.3.1
      force="{{force_update}}"
      accept_hostkey=yes
    tags: fluctus

  - name: change group ownership of fluctus to www-data
    file: path="{{ fluctus_app_root }}" state=directory recurse=yes group=www-data

# Set the right ruby interpreter
  - name: set ruby interpreter to {{ ruby_version }}
    shell: chdir=/var/www/{{ ansible_fqdn }}/fluctus rbenv local {{ ruby_version }}
    become: yes
    become_user: "{{ system_default_user }}"
    tags: rbenv

# Install bundler in local rbenv
  - name: install bundler
    shell: chdir=/var/www/{{ ansible_fqdn }}/fluctus gem install bundler
    become: yes
    become_user: "{{ system_default_user }}"
    tags: rails

# Load gems into the local rbenv
  - name: install items in fluctus gemfile
    become: yes
    become_user: "{{ system_default_user }}"
    shell: chdir=/var/www/{{ ansible_fqdn }}/fluctus bundle install
    tags: rails

# Generate Rails keys if they don't already exist
# We don't do the usual lineinfile because we don't
# want to keep overwriting the keys.

# TODO: Make this a handler and use notify.
  - name: check for existence of rails and devise key
    shell: grep {{item}}  /home/{{system_default_user}}/.profile
    register: key_present
    with_items:
      - RAILS_SECRET_KEY
      - DEVISE_SECRET_KEY
    ignore_errors: yes
    tags: railskey

  - name: generate secret keys
    shell: chdir=/var/www/{{ ansible_fqdn }}/fluctus bundle exec rake secret
    register: result
    when: key_present|failed
    ignore_errors: yes
    with_items:
      - RAILS_SECRET_KEY
      - DEVISE_SECRET_KEY
    tags: railskey

  - name: set key as fact
    when: key_present|failed
    set_fact: "RAILS_SECRET_KEY={{result.results[0].stdout}}"
    tags: railskey

  - name: set devise key as fact
    when: key_present|failed
    set_fact: "DEVISE_SECRET_KEY={{result.results[1].stdout}}"
    tags: railskey

  - name: add rails key to bash_profile
    when: key_present|failed
    lineinfile:
      dest=/home/{{system_default_user}}/.profile
      state=present
      line="export RAILS_SECRET_KEY=\'{{RAILS_SECRET_KEY}}\'"
    tags: railskey

  - name: add devise key to bash_profile
    when: key_present|failed
    lineinfile:
      dest=/home/{{system_default_user}}/.profile
      state=present
      line="export DEVISE_SECRET_KEY=\'{{DEVISE_SECRET_KEY}}\'"
    tags: railskey

# Set up Fluctus config
# TODO: Move this into its own role. this aint noting to do with rails.
# TODO: This is a stop gap. use template instead.
  - name: Setting fluctus app configuration
    template:
        src: "application.yml.j2"
        dest: "{{ fluctus_app_root }}/config/application.yml"
        owner: "{{system_default_user}}"
        group: "{{system_deploy_group}}"
        mode: 0644
    when: key_present|failed

# Set up Jetty/Solr
  - stat: path=/var/www/{{ ansible_fqdn }}/fluctus/jetty/lib
    register: jetty
    tags: rails

  - name: set up jetty/solr
    #    script: setup_jetty.sh
    shell: chdir=/var/www/{{ ansible_fqdn }}/fluctus rails g hydra:jetty
    become_user: "{{system_default_user}}"
    when: not jetty.stat.exists
    tags: rails

# TODO: Might not need this as figaro loads the env for fluctus.
  - lineinfile:
      dest=/home/{{system_default_user}}/.profile
      state=present
      line='export FEDORA_USER=fedoraAdmin'
    tags: rails

  - lineinfile:
      dest=/home/{{system_default_user}}/.profile
      state=present
      line='export FEDORA_PASS=fedoraAdmin'
    tags: rails

  - lineinfile:
      dest=/home/{{system_default_user}}/.profile
      state=present
      line="export FEDORA_URL='http://127.0.0.1:8983/fedora'"
    tags: rails

# Bring the dev and test databases up to date.
# If the the test db is not up to date, you can't run spec tests.
  - name: migrate dev database
    shell: chdir=/var/www/{{ ansible_fqdn }}/fluctus bundle exec rake db:migrate
    environment:
      RAILS_ENV: "development"
    tags: rails

  - name: migrate test database
    shell: chdir=/var/www/{{ ansible_fqdn }}/fluctus bundle exec rake db:migrate
    environment:
      RAILS_ENV: "test"
    tags: rails
