---
- name: Setup EBS_AutoScaling IAM Role
  iam:
    iam_type: role
    name: "{{iam_policy_name}}"
    state: present
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    trust_policy:
      Version: '2012-10-17'
      Statement:
      - Action: sts:AssumeRole
        Effect: Allow
        Principal:
          Service: ec2.amazonaws.com

- name: Add inline policy to EBS_AutoScaling Role
  iam_policy:
    iam_type: role
    iam_name: "{{iam_policy_name}}"
    policy_name: "{{iam_policy_name}}"
    policy_json: "{{ lookup( 'template', 'ebs_autoscale_role.json.j2') }}"
    state: present
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"

- name: Gimme non-alternative facts
  ec2_facts:

# Need to use aws cli since function doesn't exist yet in Ansible
- name: Apply IAM policy to instance
  delegate_to: localhost
  command: "aws ec2 associate-iam-instance-profile --instance-id {{ansible_ec2_instance_id}} --iam-instance-profile Name={{iam_policy_name}} --region {{ansible_ec2_placement_region}}"
  become: False
  register: iam_pol_result
  when: instance_name is defined
  # This is stupid but there is currently no other sane way.
  ignore_errors: yes

- name: Install LVM packages
  apt: name=lvm2 state=latest

# TODO: Once some functions of the ebs_scale script are factored out, this may
# be enabled again. For now its just for documentation reasons. It is working
# and tested but includes redundant functions as long as the scaling script
# takes care of them.
# - include: lvm_setup.yml

- name: Install jq for json queries and bc for bash arithmetic
  apt: name={{item}} state=present
  with_items:
    - jq
    - bc

# TODO: Consider using root as owner and executor or limit sudo to the lvm commands
#       currently system_default_user has pwdless sudo privileges which is not ideal.
- name: Copy EBS_Scale script
  template:
    src: "ebs_autoscale.sh.j2"
    dest: "{{ebs_autoscale_script_dest}}"
    owner: "{{system_default_user}}"
    group: "{{system_default_group}}"
    mode: 0750
  tags: copyebsscript

- name: Touch logfile
  file:
    dest: "{{ebs_logfile}}"
    owner: "{{system_default_user}}"
    group: "{{system_default_group}}"
    mode: 0644
    state: touch

#TODO: Cron interval is set low for testing reasons. Interval size depends on
# base drive size and performance. 25% of a 100G drive could be filled in
# about 2.5 hrs
- name: Add ebs_autoscale as cronjob
  cron:
    name: "EBS Autoscaling"
    user: "{{system_default_user}}"
    minute: "{{ebs_cron_minute | default('30')}}"
    hour: "{{ebs_cron_hour | default('*')}}"
    job: "sudo {{ebs_autoscale_script_dest}} >> /var/log/ebs_autoscale.log 2>&1"
    state: present
    disabled: no

- name: "Add logrotation for {{ebs_logfile}}"
  template:
      src: logrotation.yml.j2
      dest: "/etc/logrotate.d/ebs_autoscale"
      owner: "root"
      group: "{{deploy_group}}"
      mode: 0644
  tags: ebs_logrotation


- name: Execute initial EBS_Autoscale if it hasn't run yet
  become_user: "{{system_default_user}}"
  become: true
  shell: sudo "{{ebs_autoscale_script_dest}}"
  tags: initebsrun

- name: Update permissions to lvm mount dir
  file:
    dest: "/mnt/lvm"
    owner: "{{system_default_user}}"
    group: "{{system_default_group}}"
    mode: 0775
    state: directory

