---

- name: Create DB on RDS
  rds:
      command: create
      instance_name: "mediawiki-{{APT_ENV}}"
      instance_type: "{{ mediawiki_db.rds_instance_type | default('db.t2.small') }}"
      size: "{{rds_db_size | default('16') }}"
      username: "{{mediawiki_db.user}}"
      password: "{{mediawiki_db.password}}"
      db_name: "mediawiki_{{APT_ENV}}"
      db_engine: MySQL
      multi_zone: "{{ mediawiki_db.rds_multi_az | default('no')}}"
      region: "{{ mediawiki_db.rds_region | default('us-east-1')}}"
# TODO: dependent on environment. set default to demo
# Note: security group name doesn't work, only id. Security groups have to be configured manually via AWS web console.
      vpc_security_groups: "{{ mediawiki_db.rds_sec_group | default('sg-18a4ac62')}}"
      subnet: "{{ mediawiki_db.rds_subnet | default('demo') }}"
# Note: Timeout is set high since inital RDS creation may take a while.
      wait_timeout: 600
      wait: yes
      aws_access_key: "{{ lookup('env','AWS_ACCESS_KEY_ID') }}"
      aws_secret_key: "{{ lookup('env','AWS_SECRET_ACCESS_KEY') }}"
      backup_retention: "{{mediawiki_db.rds_backup_retention | default('1')}}"
      backup_window: '10:00-10:30'
      maint_window: 'Tue:10:30-Tue:11:00'
      tags:
          Environment: "{{APT_ENV}}"
  tags: createrds
  register: rds_facts
  when: mediawiki_local_db == false

# Note: This is a workaround since rds create obfuscates endpoint info in
# rds_facts. e.g. "endpoint": "********-demo.cbtzcfmydoc1.us-east-1.rds.amazonaws.com"
- rds:
    command: facts
    instance_name: "mediawiki-{{APT_ENV}}"
    region: "{{mediawiki_db.rds_region | default('us-east-1')}}"
    aws_access_key: "{{ lookup('env','AWS_ACCESS_KEY_ID') }}"
    aws_secret_key: "{{ lookup('env','AWS_SECRET_ACCESS_KEY') }}"
  register: rds_facts
  when: mediawiki_local_db == false
  tags: createrds

- name: Set RDS db_host fact
  set_fact: mediawiki_db_host="{{rds_facts.instance.endpoint}}"
  when: mediawiki_local_db == false

- name: ensure mysql python packages are present
  apt:
    name: python-mysqldb
    state: present

- name: create database
  mysql_db:
    name: '{{mediawiki_db.name}}'
    login_unix_socket: '/var/run/mysqld/mysqld.sock'
  when: mediawiki_local_db == true

- name: Create database user
  mysql_user:
    host: "{{mediawiki_db_host}}"
    name: '{{mediawiki_db.user}}'
    password: '{{mediawiki_db.password}}'
    priv: '{{mediawiki_db.name}}.*:ALL'
  when: mediawiki_local_db == true

