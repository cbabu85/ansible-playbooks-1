---
- name: Create traefik network
  become: true
  docker_network:
    name: "{{ traefik_network }}"
    attachable: yes
    internal: no
  tags:
    - configuration

- name: Create Traefik directory
  file:
    path: "{{traefik_dir}}"
    owner: "{{system_default_user}}"
    group: "{{system_default_group}}"
    mode: 0644
    recurse: true
    state: directory
  tags: makedir

- name: Add traefik compose
  become: true
  template:
    src: 'docker-compose.yml.j2'
    dest: "{{traefik_dir}}/docker-compose.yml"
    owner: "{{system_default_user}}"
    group: "{{system_default_group}}"
    mode: 0644
  tags:
    - configuration


- name: Configuration traefik
  become: true
  template:
    src: 'traefik.yml.j2'
    dest: "{{traefik_dir}}/traefik.yml"
    owner: "{{system_default_user}}"
    group: "{{system_default_group}}"
    mode: 0644
  tags:
    - configuration

- name: Start traefik
  docker_compose:
    project_src: "{{traefik_dir}}"
    state: present
  vars:
    ansible_python_interpreter: "/usr/bin/env python-docker"

#- name: Start global_traefik
#  become: true
#  docker_container:
#    name: "{{traefik_container_name}}"
#    image: "traefik:{{traefik_version}}"
#    restart_policy: unless-stopped
#    published_ports:
#      - '80:80'
#      - '443:443'
#    #   env:
#    #     CF_API_EMAIL: "{{ traefik_dnschallenge_env.CF_API_EMAIL }}"
#    #     CF_API_KEY: "{{ traefik_dnschallenge_env.CF_API_KEY }}"
#    volumes:
#      - /etc/localtime:/etc/localtime:ro
#      - "{{traefik_dir}}/traefik.yml:/etc/traefik/traefik.yml"
#      - /var/run/docker.sock:/var/run/docker.sock
#      - traefik-data:/etc/traefik
#    capabilities:
#      - net_bind_service
#    networks:
#      - name: '{{ traefik_network }}'
#    networks_cli_compatible: false
#  tags:
#    - configuration
