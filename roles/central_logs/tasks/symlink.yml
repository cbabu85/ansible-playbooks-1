---
- name: Create app log subdirectory in central log dir
  file:
    path: "{{central_log_dir}}/{{item.name}}"
    owner: "{{system_default_user}}"
    group: "{{deploy_group}}"
    mode: 0755
    state: directory
  when: mount_stat.rc == 0
  tags: subdirlogs

# Only move existing files if not yet symlinked.
- name: Check if app log directory has already been symlinked
  stat: path="{{item.logdir}}"
  register: app_log_dir_link

- name: Look if logfiles present
  shell: test "$(ls {{item.logdir}})"
  register: logsPresent
  changed_when: false
  when:  app_log_dir_link.stat and app_log_dir_link.stat.islnk == false

- name: ls "{{item.name}}"
  shell: ls -A {{item.logdir}}
  register: path_files

- name: Move existing logfiles to central log directory
  shell: "mv {{item.logdir}}/{{files_item}} {{central_log_dir}}/{{item.name}}"
  tags: logmove
  with_items:
    - "{{path_files.stdout_lines}}"
  loop_control:
        loop_var: files_item
  when:  (app_log_dir_link.stat and app_log_dir_link.stat.islnk == false)
         and "logsPresent.rc != 0"

- name: Symlink app log dir to central log dir
  file:
    src: "{{central_log_dir}}/{{item.name}}"
    dest: "{{item.logdir}}"
    owner: "{{system_default_user}}"
    group: "{{deploy_group}}"
    force: yes
    state: link
  register: symlinked
  when: (mount_stat.rc == 0) and (app_log_dir_link.stat.islnk == false)

- name: Restart service if defined
  service: name="{{item.servicename}}" state=reloaded
  when: item.servicename is defined
