# TODO:  Need to reinable once refactored for DPN use.
  # - include: dpn.yml
  # when: orgtype == 'dpn'

# TODO: Need to ensure dockerd is running
# TODO: Define dockerhub (wherever that may be) in defaults. Default to hub.docker.com
# TODO: Need to create volume directories to mount config and data volumes
# TODO: Need to ensure to pass in ENV Vars to docker containers, like AWS, pharos api key,...
# TODO: Run and start containers. Stop. Update config in volume mounts. Restart containers

# Set AWS Credentials as ENV
# TODO: Consider using separate creds for staging and prod S3 access.
# TODO: pass in ENV vars into container runs
- name: Set AWS Credentials, GoPath, ExchangeHome
  no_log: true
  lineinfile: >
    dest="/home/{{system_default_user}}/.profile"
    state=present
    regexp="{{item.name}}=.*"
    line="export {{item.name}}={{item.value}}"
  with_items:
    - { name: "AWS_ACCESS_KEY_ID", value: "{{aws_go_user}}"}
    - { name: "AWS_SECRET_ACCESS_KEY", value: "{{aws_go_pwd}}"}
    - { name: "GOPATH", value: "{{go_env.GOPATH}}"}
    - { name: "EXCHANGE_HOME", value: "{{goapp_src_path}}"}
    - { name: "PHAROS_API_USER", value: "{{pharos_api_user}}"}
    - { name: "PHAROS_API_KEY", value: "{{pharos_api_key}}"}
  tags: envvars

# Note: Commmon role creates and mounts external filesystems like EFS/EBS.
#       When deploy is on virtualbox, directories will be created locally.
#       Applying permissions recursively to avoid Supervisor bug that creates
#       logfiles only with root:root rw access.
#       https://github.com/Supervisor/supervisor/issues/114
- name: "Create {{mount_dir}} volume directories"
  become: yes
  file:
    path: "{{mount_dir}}/{{item.0}}/{{item.1}}"
    owner: "{{system_default_user}}"
    group: "{{deploy_group}}"
    mode: 0775
    recurse: yes
    state: directory
  with_nested:
    - ['apt']
    - ['data','logs','restore','replication']
  tags: exchange_ebs
  when: orgtype == 'apt'



# TODO: Update path to volume mount of containers, once defined. It's fine to copy the file multiple times for each service as it allows to update config per microservice/container
- name: Update Exchange config file
  become_user: "{{system_default_user}}"
  become: true
  template: src=exchange.json.j2
            dest="/{{goapp_cfg_path}}/{{GO_ENV}}.json"
  tags: buildgo, exchangetemplate

- name: Update NSQ config file
  become_user: "{{system_default_user}}"
  become: true
  template: src=nsq.config.j2
            dest="{{goapp_cfg_path}}/nsq/{{GO_ENV}}.config"
  tags: buildgo, nsq_supervisor


# TODO: Need to figure out if cronjobs should run in containers or bare-metal.
- name: Add APTrust cronjobs
  cron: name="{{item.key}}"
        user="{{system_default_user}}"
        minute="{{item.value.minute | default('*')}}"
        hour="{{item.value.hour | default('*')}}"
        job=". $HOME/.profile; {{goapp_bin_path}}/{{item.key}}
             -config={{goapp_cfg_path}}/{{GO_ENV}}.json
             {{item.value.params | default('')}}
             >> {{goapp_log_path}}/cron_{{item.key}}.log 2>&1"
        state=present
        disabled=no
  with_dict: "{{ apt_cronjobs }}"
  when: orgtype == 'apt'
  tags: apt_cronjobs

- set_fact:
      supervisor_apps:
        - 'nsqservices:'
        - 'exchange:'
  when: orgtype == 'apt'

# Ensure docker container running state.
- name: Ensure Exchange services are running
  supervisorctl: name="{{item}}" state=started
  with_items: "{{supervisor_apps}}"

# TODO: Logs should be redirected to Graylog instance.
# TODO: Need add option for non-Graylog, local file storage.
- name: Add logrotation because supervisor doesn't want to
  template:
      src: logrotation.yml.j2
      dest: "/etc/logrotate.d/exchange_{{APP_ENV}}"
      owner: "root"
      group: "{{deploy_group}}"
      mode: 0644
  tags: exchange_logrotate
