---

- name: Remove the old go version
  file: path={{golang_install_dir}}/go state=absent
  when: golang_update == true

- name: Download the Golang tarball
  become: yes
  get_url:
    url: "http://golang.org/dl/{{ golang_tarball }}"
    dest: "/usr/local/src/{{ golang_tarball }}"
    sha256sum: "{{ golang_tarball_checksum }}"
    force: no
    validate_certs: no

- name: Extract the Golang tarball
  become: yes
  unarchive:
    copy: no
    dest: "{{golang_install_dir}}"
    src: "/usr/local/src/{{ golang_tarball }}"

- name: Create Golang code folders for workspace user
  file:
    dest: "{{ item }}"
    recurse: yes
    state: directory
    owner: "{{system_default_user}}"
    group: "{{system_default_group}}"
  with_items:
    - "/home/{{ golang_workspace_user }}/go/src/github.com"
    - "/home/{{ golang_workspace_user }}/go/pkg"
    - "/home/{{ golang_workspace_user }}/go/bin"
  when: golang_workspace_user is defined

# TODO: may want to move it to .profile as .bashrc is only executed when logging in
- name: Add Golang environment variables to .bashrc for workspace user
  become : yes
  become_user: "{{ golang_workspace_user }}"
  lineinfile:
    create: yes
    dest: "/home/{{ golang_workspace_user }}/.bashrc"
    insertafter: EOF
    line: "{{ item }}"
  with_items:
    - "export GOPATH=/home/{{ golang_workspace_user }}/go"
    - "export PATH=$GOPATH/bin:$PATH"
    - "export PATH=$PATH:/usr/local/go/bin"
  when: golang_workspace_user is defined

- name: Add glide repo
  apt_repository: repo='ppa:masterminds/glide' state=present

- name: Install glide dependency manager
  apt: name=glide state=present update_cache=yes cache_valid_time=3600
