---
pharos_docker: false
RAILS_ENV: 'development'

pharos_app_root: "/var/www/{{ansible_fqdn}}/pharos"

pharos_db_name: "pharos_{{RAILS_ENV}}"
pharos_db_user: "pharos_admin"
pharos_db_pwd: "s3cr3tp455w0rd"

pharos_devise_key: "c0044b2aec4c34f7ce7342ce3b4367e4cf6757c1f8187a8916737e3dce07859c23648098ea8e26c6f472731b3971c23a48d3e436ebafcc4fadb20c56910040ed"
pharos_rails_key: "6ea6849fb203a813ff2bd09275fb57246cbbabe01af1e52507791c7b5251f7d2819c723da646545ca44048a5e777f3ab517417f020d660d9e7d35a19cb9333"

pharos_url: "https://pharos.aptrust.org"

# AWS RDS
# Note: sec_group and subnet have to be setup prior deployment
pharos_rds_instance_name: "pharos-{{RAILS_ENV}}"
pharos_rds_instance_type: "db.t2.medium"
pharos_db_size: '16'
pharos_vpc_sec_group: "sg-18a4ac62"
pharos_rds_subnet: "demo"

# If true, postgresql is installed locally and used for pharos db
pharos_local_db: False

# Defaults to unknown since deployment updates this from git hash
PHAROS_RELEASE: "Unknown"

# Variable to allow from-scratch setup with db setup. Defaults to false to
# avoid wiping demo/staging/prod databases.
pharos_setup: false
pharos_logserver: ''
pharos_logserver_port: '12219'

pharos_cronjobs:
    pharos_notify:
        hour: "*/10"
        minute: "*"
        params: ''
        disabled: 'yes'
    pharos_snapshot:
        hour: "1"
        minute: "1"
        day: "1"
        params: '-o snapshot'
        disabled: 'yes'
    pharos_deletion:
        hour: "1"
        minute: "2"
        day: "1"
        params: '-o deletion'
        disabled: 'yes'

# Docker deploy vars
dockerapp_repo: "https://github.com/APTrust/pharos"
docker_image_name: "registry.gitlab.com/aptrust/container-registry/pharos"
docker_tag_name: 'latest'
dockerapp_path: "/srv/docker/pharos"
