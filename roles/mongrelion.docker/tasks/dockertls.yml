---
# TODO: Make this into Ansible tasks instead.
- name: Copy TLS config script
  script: "/bin/bash create-docker-tls.sh {{ansible_hostname}}.aptrust.org"
  args:
    creates: "/home/{{docker_deploy_user}}/.docker/ssl/ca.pem"
  become_user: "{{docker_deploy_user}}"
  when: docker_tls
  tags: docker_tls

- name: Copy certs to /etc/docker/ssl
  synchronize:
    src: "/home/{{docker_deploy_user}}/.docker/"
    dest: "/etc/docker/ssl"
  delegate_to: "{{ inventory_hostname }}"
  when: docker_tls
  tags: docker_tls

- name: Get local users homedir
  local_action: shell echo ~
  become: false
  changed_when: false
  register: homedir
  tags: docker_tls, homedir, filepull, localdir, profileupdate

- name: make sure local .docker directory exists
  file:
    dest: "{{homedir.stdout}}/.docker/ssl"
    state: directory
    mode: 0775
  delegate_to: 127.0.0.1
  become: false
  when: docker_tls
  tags: docker_tls,localdir

- name: Copy client certs to localhost
  synchronize:
    mode: pull
    src: "/home/{{system_default_user}}/.docker/"
    dest: "{{homedir.stdout}}/.docker/ssl/"
    checksum: yes
    times: yes
  when: docker_tls
  tags: docker_tls, filepull

- name: Ensure control host is using remote docker host
  blockinfile:
    path: "{{homedir.stdout}}/{{item}}"
    block: |
      export DOCKER_HOST=tcp://docker.aptrust.org:2376
      # Ignore for now so we don't get unknown ca authority error.
      #export DOCKER_TLS_VERIFY=1
      export DOCKER_CERT_PATH=~/.docker/ssl
  delegate_to: 127.0.0.1
  with_items:
    - .profile
    - .bash_profile
  become: false
  register: profile_update
  tags: docker_tls, profileupdate

- name: Source .profile if changed
  shell: source "{{homedir.stdout}}/{{item}}"
  args:
    executable: /bin/bash
  become: false
  delegate_to: 127.0.0.1
  with_items:
    - .profile
    - .bash_profile
  when: profile_update is changed
  tags: docker_tls, profileupdate

- name: "Create Overrides directory for Docker"
  file:
    path: /etc/systemd/system/docker.service.d
    state: directory

- name: "Push the Docker daemon config to Server"
  template:
    src: daemon_startup_options.conf
    dest: /etc/systemd/system/docker.service.d/daemon_startup_options.conf

- name: "Restart Docker Daemon service"
  systemd:
    name: docker
    state: restarted
    daemon_reload: yes
