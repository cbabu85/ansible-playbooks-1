/*
 * Generic template examples.
 */


/**
 * Provides default settings for hosts. By convention
 * all hosts should import this template.
 *
 * The CheckCommand object `hostalive` is provided by
 * the plugin check command templates.
 * Check the documentation for details.
 */
template Host "generic-host" {
  max_check_attempts = 3
  check_interval = 1m
  retry_interval = 30s
  enable_perfdata = true
  check_command = "hostalive"

  states = [ OK, Warning, Critical, Unknown ]
  enable_notifications = true 
  vars.slack_notifications = "enabled"

}

/**
 * Provides default settings for services. By convention
 * all services should import this template.
 */
template Service "generic-service" {
  max_check_attempts = 5
  check_interval = 1m
  retry_interval = 30s
  enable_perfdata = true
  enable_notifications = true 
  vars.slack_notifications = "enabled"
 }

template Service "agent-based-service" {
    max_check_attempts = "5"
    check_interval = 1m
    retry_interval = 30s
    command_endpoint = host_name
    enable_perfdata = true
    enable_notifications = true 
    vars.slack_notifications = "enabled"
}
/**
 * Provides default settings for users. By convention
 * all users should inherit from this template.
 */

template User "generic-user" {

}

/**
 * Provides default settings for host notifications.
 * By convention all host notifications should import
 * this template.
 */
template Notification "mail-host-notification" {
  command = "mail-host-notification"

  states = [ Up, Down ]
  types = [ Problem, Acknowledgement, Recovery, Custom,
            FlappingStart, FlappingEnd,
            DowntimeStart, DowntimeEnd, DowntimeRemoved ]

  period = "24x7"
}

/**
 * Provides default settings for service notifications.
 * By convention all service notifications should import
 * this template.
 */
template Notification "mail-service-notification" {
  command = "mail-service-notification"

  states = [ OK, Warning, Critical, Unknown ]
  types = [ Problem, Acknowledgement, Recovery, Custom,
            FlappingStart, FlappingEnd,
            DowntimeStart, DowntimeEnd, DowntimeRemoved ]

  period = "24x7"
}
template Notification "slack-host-notification" {
  command = "slack-host-notification"

  states = [ Up, Down ]
  types = [ Problem, Acknowledgement, Recovery, Custom,
            FlappingStart, FlappingEnd,
            DowntimeStart, DowntimeEnd, DowntimeRemoved ]

  period = "24x7"
}
template Notification "slack-service-notification" {
  command = "slack-service-notification"

  states = [ OK, Warning, Critical, Unknown ]
  types = [ Problem, Acknowledgement, Recovery, Custom,
            FlappingStart, FlappingEnd,
            DowntimeStart, DowntimeEnd, DowntimeRemoved ]

  period = "24x7"
}

template Host "Icinga Agent"{
	check_command = "hostalive"
	max_check_attempts = "3"
	check_interval = 1m
	retry_interval = 30s
	enable_notifications = true
  	vars.slack_notifications = "enabled"
  	enable_perfdata = true
}
template Host "RDS Instance"{
	check_command = "check_aws_rds"
	max_check_attempts = "3"
	check_interval = 1m
	retry_interval = 30s
	enable_notifications = true
  	vars.slack_notifications = "enabled"
  	enable_perfdata = true
}
