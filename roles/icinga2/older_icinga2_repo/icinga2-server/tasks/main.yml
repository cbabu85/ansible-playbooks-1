---
# tasks file for roles/icinga2
- name: Add key of Icinga2 repository
  apt_key:
    url: http://packages.icinga.org/icinga.key
    state: present

- name: Add Icinga2 ubuntu repository
  apt_repository:
    repo: "deb http://packages.icinga.org/ubuntu icinga-{{ ansible_distribution_release }} main"
    update_cache: yes

- name: Install prerequisites and Icinga2
  apt:
    name: "{{ item }}"
    update_cache: yes
  with_items:
    - php5-imagick
    - php5-intl
    - php5-gd
    - php5-mysql
    - php5-pgsql
    - icingaweb2
    - icinga2
    - mysql-client
    - python-mysqldb
    - icinga2-ido-mysql
    - pnp4nagios

- name: Install MySql
  apt:
    name: "{{ item }}"
  with_items:
    - mysql-server
  register: icinga2_mysql_install

- name: Set up password to root
  mysql_user:
    login_host: "{{ icinga2_mysql_host }}"
    login_port: "{{ icinga2_mysql_port }}"
    login_user: root
    name: root
    password: "{{ icinga2_mysql_auth_pass }}"
  when: icinga2_mysql_install.changed

- name: Create icinga2 database.
  mysql_db:
    login_host: "{{ icinga2_mysql_host }}"
    login_port: "{{ icinga2_mysql_port }}"
    login_user: "{{ icinga2_mysql_auth_user }}"
    login_password: "{{ icinga2_mysql_auth_pass }}"
    name: "{{ icinga2_db }}"
  register: icinga2_create_db

- name: Create Icinga2 web auth database
  mysql_db:
    login_host: "{{ icinga2_mysql_host }}"
    login_port: "{{ icinga2_mysql_port }}"
    login_user: "{{ icinga2_mysql_auth_user }}"
    login_password: "{{ icinga2_mysql_auth_pass }}"
    name: "{{ icinga2_db_auth }}"
  register: icinga2_web_create_db

- name: Import IDO schema
  mysql_db:
    login_host: "{{ icinga2_mysql_host }}"
    login_port: "{{ icinga2_mysql_port }}"
    login_user: "{{ icinga2_mysql_auth_user }}"
    login_password: "{{ icinga2_mysql_auth_pass }}"
    state: import
    name: "{{ icinga2_db }}"
    target: /usr/share/icinga2-ido-mysql/schema/mysql.sql
  when: icinga2_create_db.changed

- name: Create mysql user and set permissions of icinga2 db
  mysql_user:
    login_host: "{{ icinga2_mysql_host }}"
    login_port: "{{ icinga2_mysql_port }}"
    login_user: "{{ icinga2_mysql_auth_user }}"
    login_password: "{{ icinga2_mysql_auth_pass }}"
    name: "{{ icinga2_db_user }}"
    password: "{{ icinga2_db_pass }}"
    priv: "{{ icinga2_db }}.*:SELECT,INSERT,UPDATE,DELETE,DROP,CREATE VIEW,INDEX,EXECUTE"
    host: "localhost"

- name: Create mysql user and set permissions of icinga2 web auth db
  mysql_user:
    login_host: "{{ icinga2_mysql_host }}"
    login_port: "{{ icinga2_mysql_port }}"
    login_user: "{{ icinga2_mysql_auth_user }}"
    login_password: "{{ icinga2_mysql_auth_pass }}"
    name: "{{ icinga2_db_auth_user }}"
    password: "{{ icinga2_db_auth_pass }}"
    priv: "{{ icinga2_db_auth }}.*:SELECT,INSERT,UPDATE,DELETE,DROP,CREATE VIEW,INDEX,EXECUTE"
    host: "localhost"

- name: Enable IDO MySql module
  command: icinga2 feature enable ido-mysql
  register: icinga2_enable_ido_mysql

- name: Copy configuration file of IDO MySql module
  template:
    src: ido-mysql.conf.j2
    dest: /etc/icinga2/features-available/ido-mysql.conf
    owner: nagios
    group: nagios
    mode: 0600
  notify: restart icinga2

- name: Set default timezone
  lineinfile:
    dest: /etc/php5/apache2/php.ini
    regexp: "^;date.timezone"
    line: "date.timezone = {{ icinga2_php_timezone }}"
  notify: restart apache2

- name: Check file /etc/icingaweb2/setup.token
  tags:
    - read-token
  stat:
    path: /etc/icingaweb2/setup.token
  register: icinga2_web_token_st

- name: Create token
  command: icingacli setup token create
  register: icingaweb2_web_token_create
  when: icinga2_web_token_st.stat.exists == False

- name: Get token
  tags: read-token
  command: icingacli setup token show
  register: icingaweb2_web_token_read
  when: icinga2_web_token_st.stat.exists == True

- debug:
    msg: "Now go to http://{{ ansible_default_ipv4.address }}/icingaweb2/setup to continue the installation using token: {{ icingaweb2_web_token_create.stdout.split()[-1:] }}"
  when: icinga2_web_token_st.stat.exists == False

- tags: read-token
  debug:
    msg: "Now go to http://{{ ansible_default_ipv4.address }}/icingaweb2/setup to continue the installation using token: {{ icingaweb2_web_token_read.stdout.split()[-1:] }}"
  when: icinga2_web_token_st.stat.exists == True

- name: Fix permissions
  shell: chown -R www-data /etc/icingaweb2
  become: True

- name: check if ido-mysql feature enabled
  stat: path=/etc/icinga2/features-enabled/command.conf
  register: command_enabled
  changed_when: false

- name: icinga2 feature enable command
  shell: icinga2 feature enable command
  notify: restart-icinga2
  when: not command_enabled.stat.exists
