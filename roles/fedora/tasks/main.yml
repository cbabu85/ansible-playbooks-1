---

- stat: path="{{fedora_workspace}}/fcrepo-installer-{{fedora_version}}.jar"
  register: fedora_jar

- name: Make sure fedora home exists.
  file:
    path: "{{fedora_home}}"
    recurse: yes
    state: directory
    owner: "{{system_default_user}}"
    group: "tomcat7"
    mode: 0775

- name: Download Fedora
  get_url: >
    url="http://sourceforge.net/projects/fedora-commons/files/fedora/"{{fedora_version}}"/fcrepo-installer-"{{fedora_version}}".jar/download"
    dest="{{fedora_workspace}}"
    sha256sum=40d3fe844cf8d20d9556e369792d162c2eb54c46274126da6734db09d0a3521c
  register: fedora_download
  when: fedora_version.split('.')[0] == '3' and not fedora_jar.stat.exists

- name: Extract fedora.war
  command: chdir="{{fedora_workspace}}" unzip -j fcrepo-installer-"{{fedora_version}}".jar resources/fedora.war
  when: fedora_version.split('.')[0] == '3' and fedora_download.changed

- name: Extract fedorahome
  become: "{{system_default_user}}"
  command: chdir="{{fedora_workspace}}" unzip -ju fcrepo-installer-"{{fedora_version}}".jar resources/fedorahome.zip -d "{{fedora_home}}" creates="{{fedora_home}}/fedorahome.zip"
  when: fedora_version.split('.')[0] == '3' and fedora_download.changed

# Note: For some reason Ansible doesn't parse concat (&&) unzips.Therefore this.
- name: Extract fedorahome to fedorahome.
  command: chdir="{{fedora_home}}" unzip -qu "{{fedora_home}}"/fedorahome.zip -d "{{fedora_home}}" creates="{{fedora_home}}/server"
  when: fedora_version.split('.')[0] == '3' and fedora_download.changed

- name: Copy fedora.xml file to Mr Tomcat.
  template:
    src: fedora.xml.j2
    dest: /etc/tomcat7/Catalina/localhost/fedora.xml
    owner: tomcat7
    group: tomcat7
    mode: 0644
  notify: reload tomcat
  when: fedora_app_server == 'tomcat'

- name: Copy fedora.war to Mr Tomcat.
  shell: cp fedora.war /var/lib/tomcat7/webapps
  args:
    chdir: "{{fedora_workspace}}"
    creates: "/var/lib/tomcat7/webapps/fedora.war"
  notify: reload tomcat
  when: fedora_app_server == 'tomcat'


# DB Setup
# TODO: Separate this in fedora-db.yml and include in main file.
- name: Create fedora database.
  postgresql_db: name={{fedora_db}} encoding='UTF-8' owner={{fedora_db_user}}
  when: fedora_db_server == 'postgresql'

- name: Create fedora database user.
  postgresql_user: name={{fedora_db_user}} password={{fedora_db_pwd}} state=present db={{fedora_db}}
  # Add check if postgresql is running?
  when: fedora_db_server == 'postgresql'

# TODO: Add option for remote DB connections. This task would probably just update config templates for connection information.

# Todo: Look into setting up logging/logrotation.


