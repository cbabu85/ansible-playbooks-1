---
- stat: path="{{fedora_workspace}}/fcrepo-installer-{{fedora_version}}.jar"
  register: fedora_jar

- name: Make sure fedora home exists.
  file:
    path: "{{fedora_home}}"
    recurse: yes
    state: directory
    owner: "{{system_default_user}}"
    group: "tomcat7"
    mode: 0775

- name: Download Fedora
  get_url: >
    url="http://sourceforge.net/projects/fedora-commons/files/fedora/"{{fedora_version}}"/fcrepo-installer-"{{fedora_version}}".jar/download"
    dest="{{fedora_workspace}}"
    sha256sum=40d3fe844cf8d20d9556e369792d162c2eb54c46274126da6734db09d0a3521c
  register: fedora_download
  when: fedora_version.split('.')[0] == '3' and not fedora_jar.stat.exists

- name: Extract fedora.war
  command: chdir="{{fedora_workspace}}" unzip -j fcrepo-installer-"{{fedora_version}}".jar resources/fedora.war creates="{{fedora_workspace}}/fedora.war"
  when: fedora_version.split('.')[0] == '3'

- name: Copy install.properties to fedora_home
  template:
    src: install.properties.j2
    dest: "{{fedora_home}}/install.properties"
    owner: "{{system_default_user}}"
    group: tomcat7
    mode: 0644
  tags: fedora_install

# Run the installer with install.properties
- name: Execute fedora installer
  shell:  echo yes | java -jar fcrepo-installer-{{fedora_version}}.jar {{fedora_home}}/install.properties
  args:
    chdir: "{{fedora_workspace}}"
    creates: "{{fedora_home}}/server"
  tags: fedora_install

- name: Copy fedora.xml file to Mr Tomcat.
  template:
    src: fedora.xml.j2
    dest: /etc/tomcat7/Catalina/localhost/fedora.xml
    owner: tomcat7
    group: tomcat7
    mode: 0644
  notify: reload tomcat
  when: fedora_app_server == 'tomcat'

- name: Copy fedora.war to Mr Tomcat.
  shell: cp fedora.war /var/lib/tomcat7/webapps
  args:
    chdir: "{{fedora_workspace}}"
    creates: "/var/lib/tomcat7/webapps/fedora.war"
  notify: reload tomcat
  when: fedora_app_server == 'tomcat'

# DB Setup
- name: Create fedora database user.
  postgresql_user: name={{fedora_db_user}} password={{fedora_db_pwd}} state=present login_host={{fedora_db_host}}
  when: fedora_db_server == 'postgresql'

- name: Create fedora database.
  postgresql_db: name={{fedora_db}} encoding='UTF-8' owner={{fedora_db_user}} login_host={{fedora_db_host}}
  when: fedora_db_server == 'postgresql'

# TODO: Look into setting up logging/logrotation. Logs in fedora/server/logs by
# default.

# Setup config files
- name: Update Fedora config files
  template:
    src: "{{item}}.j2"
    dest: "{{fedora_home}}/server/config/{{item}}"
    owner: tomcat7
    backup: yes
  with_items:
    - beSecurity.xml
    - fedora-users.xml
    - fedora.fcfg
  notify: reload tomcat

# Update fedora webapp
- name: Update applicationContext.xml
  template:
    src: "applicationContext.xml.j2"
    dest: "/var/lib/tomcat7/webapps/fedora/WEB-INF/applicationContext.xml"
    owner: tomcat7
    mode: 0744
    backup: yes
  notify: reload tomcat


- name: Set fedora.home permissions.
  file:
    path: "{{ fedora_home }}"
    recurse: yes
    state: directory
    owner: "tomcat7"
    group: "tomcat7"
    mode: 0755


