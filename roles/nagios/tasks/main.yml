---
# tasks file for nagios

- name: Ensure download directory is present
  file: path={{ download_dir }} state=directory

- include: load-variables.yml

- include: "setup-RedHat-family-prerequisites.yml"
  when: ansible_os_family == 'RedHat'

- include: setup-Debian-family-prerequisites.yml
  when: ansible_os_family == 'Debian'


- name: Create nagcmd group
  group: name={{ monitoring_command_group }} state=present

- name: Create nagios user
  user: name={{ monitoring_user }} state=present groups={{ monitoring_command_group }}

- name: Add apache user to nagcmd group
  user: name={{ apache_user }} state=present groups={{ monitoring_command_group }}

- include: build-nagios.yml

- include: build-plugins.yml

- name: Activate Nagios site on Ubuntu 14.04
  file: src=/etc/apache2/conf-available/nagios.conf dest=/etc/apache2/conf-enabled/nagios.conf state=link owner=root group=root
  notify: restart apache
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == '14.04'

- name: Enable CGI
  apache2_module:
    name: cgi
    state: present
  notify: restart apache
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == '14.04'

- name: Enable version
  apache2_module:
    name: version
    state: present
  notify: restart apache
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == '12.04'


- name: Fix Nagios startup on Debian
  shell: cd /etc/rc2.d && ln -s ../init.d/nagios S18nagios creates=/etc/rc2.d/S18nagios
  when: ansible_distribution == 'Debian'

- name: Check if SELinux is running in enforcing mode and change access
  file: path=/usr/local/nagios setype=httpd_sys_content_t state=directory recurse=yes
  when: ansible_selinux != False and ansible_selinux.mode == "enforcing"

- name: http service state
  service: name={{ apache_service }} state=started enabled=yes

- name: Symlink Nagios etc to etc/nagios
  file:
    src: /usr/local/nagios/etc
    dest: /etc/nagios
    state: link

- name: Create server config directory
  file:
    path: "{{nagios_default_dir}}/etc/servers"
    state: directory
    owner: nagios
    group: nagios
    mode: 0755
  register: server_config_dir

- debug: var=server_config_dir

- name: Set to read all server configs
  lineinfile:
    dest: "{{nagios_default_dir}}/etc/nagios.cfg"
    regexp: '^#?cfg_dir=/usr/local/nagios/etc/servers'
    line: 'cfg_dir=/usr/local/nagios/etc/servers'
  when: server_config_dir|success

- name: Copy server host definitions.
  template:
    src: serverhost.cfg.j2
    dest: "{{nagios_default_dir}}/etc/servers/{{item}}.cfg"
    owner: nagios
    group: nagios
  vars:
    hostname: "{{item}}"
  with_inventory_hostnames: all:!localhost:!local-vagrant
  register: serverhosts
  notify: reload nagios
  tags: serverhosts

- name: Upate cgi.cfg to allow all nagios_users
  template:
    src: cgi.cfg.j2
    dest: "{{nagios_default_dir}}/etc/cgi.cfg"
    owner: nagios
    group: nagios
  notify: reload nagios
  tags: nagiosconfig

- name: Upate nagios.cfg
  template:
    src: nagios.cfg.j2
    dest: "{{nagios_default_dir}}/etc/nagios.cfg"
    owner: nagios
    group: nagios
  notify: reload nagios
  tags: nagiosconfig

