# tasks file for postfix
---
- name: Checking if sendmail is installed.
  shell: dpkg-query -W 'sendmail*'
  ignore_errors: True
  tags: sendmail
  register: sendmail_installed

- name: Removing sendmail packages
  apt: name={{ item }}  state=absent
  with_items:
    - sendmail-base
    - sendmail-bin
    - sendmail-cf
    - sendmail-doc
  tags: sendmail
  when: sendmail_installed.rc == '0'

- name: configure debconf
  debconf:
    name: "{{ item.name }}"
    question: "{{ item.question }}"
    value: "{{ item.value }}"
    vtype: "{{ item.vtype }}"
  with_items: postfix_debconf_selections
  tags: [configuration, postfix, postfix-install]

- name: install package
  apt:
    name: "{{ item }}"
    state: latest
    update_cache: true
    cache_valid_time: 3600
  with_items: postfix_install
  tags: [configuration, postfix, postfix-install]

- name: configure mailname
  template:
    src: etc/mailname.j2
    dest: /etc/mailname
    owner: root
    group: root
    mode: 0644
  notify: restart postfix
  tags: [configuration, postfix, postfix-mailname]

- name: update configuration file
  template:
    src: etc/postfix/main.cf.j2
    dest: /etc/postfix/main.cf
    owner: root
    group: root
    mode: 0644
  notify: restart postfix
  tags: [configuration, postfix, postfix-configuration]

- name: configure sasl username/password
  template:
    src: etc/postfix/sasl_passwd.j2
    dest: /etc/postfix/sasl_passwd
    owner: root
    group: root
    mode: 0600
  when: postfix_relayhost != false
  notify:
    - postmap sasl_passwd
    - restart postfix
  tags: [configuration, postfix, postfix-sasl-passwd]

- name: configure AWS SES rewrites
  lineinfile:
    dest: /etc/postfix/generic
    create: yes
    regexp: '^{{ item.user }}\s+{{ item.alias }}'
    line: '{{ item.user }} {{ item.alias }}'
    owner: root
    group: root
    mode: 0644
  with_items: postfix_AWS_aliases
  notify:
    - postmap generic
    - restart postfix
  tags: [configuration, postfix, postfix-aliases]

- name: configure aliases
  lineinfile:
    dest: /etc/aliases
    regexp: '^{{ item.user }}:\s+{{ item.alias }}'
    line: '{{ item.user }}: {{ item.alias }}'
    owner: root
    group: root
    mode: 0644
  with_items: postfix_aliases
  notify:
    - new aliases
    - restart postfix
    - send test email
  tags: [configuration, postfix, postfix-alipostfix/generic ]

- name: start and enable service
  service:
    name: postfix
    state: started
    enabled: true
  notify: test_email
  tags: [configuration, postfix, postfix-start-enable-service]

- name: send test email
  tags: test_email
  shell: echo "This is a test message. Ignore me."| mail -s "System {{ ansible_hostname     }} has been successfully provisioned with email." ops@aptrust.org
