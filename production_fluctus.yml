
-   hosts: apt-live2
    vars_files:
        - "group_vars/all.yml"
        - "group_vars/vault.yml"

    environment:
      DEBIAN_FRONTEND: noninteractive
      HOME: /home/{{ system_default_user }}
      GOPATH: /home/{{ system_default_user }}/go
      RBENV_ROOT: /home/{{system_default_user}}/.rbenv
      RAILS_ENV: 'production'
      PATH:   /usr/local/go/bin:/home/{{system_default_user}}/.rbenv/shims:/home/{{system_default_user}}/.rbenv/plugins/ruby-build/bin:/home/{{system_default_user}}/.rbenv/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      FLUCTUS_DB_HOST: fluctus-staging-preprod.cbtzcfmydoc1.us-east-1.rds.amazonaws.com
      FLUCTUS_DB_USER: "{{var_fluctus_prod_db_user}}"
      # FLUCTUS_DB_PWD: "{{var_fluctus_prod_db_pwd}}"
      FLUCTUS_DB_PWD: 'xu19dfG3G76sl'

    vars:
        playbook_name: fluctus
        fluctus_app_root: "/var/www/{{ansible_fqdn}}/{{playbook_name}}"
        # Used for solr role to symlink configurations
        fluctus_solrconfig: "{{fluctus_app_root}}/solr_conf/conf/solrconfig-4.7.xml"
        fluctus_solrschema: "{{fluctus_app_root}}/solr_conf/conf/schema.xml"
        # TODO: Add a conditional to choose dev,prod based on environment (rails_env)
        # fluctus_db_host: "{{var_fluctus_dev_db_host}}"
        fluctus_db_host: fluctus-rds-production2.cbtzcfmydoc1.us-east-1.rds.amazonaws.com
        fluctus_db_user: "{{var_fluctus_prod_db_user}}"
#        fluctus_db_pwd: "{{var_fluctus_prod_db_pwd}}"
        fluctus_db_pwd: 'xu19dfG3G76sl'

        # Fedora
        fedora_db_host: fluctus-rds-production2.cbtzcfmydoc1.us-east-1.rds.amazonaws.com
        fedora_user: "{{var_fedora_user}}"
        fedora_db_user: "{{var_fedora_user}}"
        fedora_db_pwd: "{{var_fedora_prod_pwd}}"
        fedora_pwd: "{{var_fedora_prod_pwd}}"
        fedora_pid_namespace: 'aptrust'

        # Environment vars don't seem to work for when-conditionals. Duplicate this as var for now.
        RAILS_ENV: 'production'
        RBENV_ROOT: /home/{{system_default_user}}/.rbenv

        RAILS_SECRET_KEY: "{{ RAILS_SECRET_KEY}}"
        DEVISE_SECRET_KEY: "{{ DEVISE_SECRET_KEY}}"

        # SSL
        # TODO: Conditional for aptrust.org/local.dev
        ssl_cert: "{% if ansible_bios_version == 'VirtualBox' %}{{var_vagrant_ssl_cert}}{% else %}{{var_ssl_cert}}{% endif %}"
        ssl_key: "{% if ansible_bios_version == 'VirtualBox' %}{{var_vagrant_ssl_key}}{% else %}{{var_ssl_key}}{% endif %}"
        ssl_cert_path: "{% if ansible_bios_version == 'VirtualBox' %}{{var_vagrant_ssl_cert_path}}{% else %}{{var_ssl_cert_path}}{% endif %}"
        ssl_key_path: "{% if ansible_bios_version == 'VirtualBox' %}{{var_vagrant_ssl_key_path}}{% else %}{{var_ssl_key_path}}{% endif %}"

    # APACHE
        apache_vhosts:
          - servername: "{{ ansible_fqdn }}"
            documentroot: "/var/www/{{ ansible_fqdn }}/{{ playbook_name }}"
            serveradmin: "ops@aptrust.org"
            extra_parameters: |
                # Redirect all http to https per default
                RewriteEngine On
                RewriteCond %{HTTPS} !=on
                RewriteRule ^/?(.*) https://%{SERVER_NAME}/$1 [R,L]

        apache_vhosts_ssl:
          - servername: "{{ ansible_fqdn }}"
            documentroot: "/var/www/{{ ansible_fqdn }}/{{ playbook_name }}"
            serveradmin: "ops@aptrust.org"
            certificate_file: "{{ssl_cert_path}}"
            certificate_key_file: "{{ssl_key_path}}"
            # TODO: Make this into a template? or rewrite apache role
            extra_directory_parameters: |
                    PassengerEnabled on
                    PassengerBaseURI /
                    PassengerAppRoot "{{ fluctus_app_root}}"
                    PassengerAppEnv "{{ RAILS_ENV }}"
                    PassengerFriendlyErrorPages off
                    # Make Passenger load environment vars before starting Rails app.
                    PassengerRuby /usr/local/bin/fluctus_passenger_wrapper.sh
            extra_parameters: |
                    AllowEncodedSlashes NoDecode
                    PassengerAllowEncodedSlashes on
                    # Run at least 2 workers.
                    PassengerMinInstances 2

            # Static documentroot
            documentroot_static: "/var/www/{{ ansible_fqdn }}/{{ playbook_name }}/public"

        apache_mods_enabled:
            - rewrite.load
            - socache_shmcb.load
            - ssl.load
            - ssl.conf

        apache_mods_disabled: []
        apache_remove_default_vhost: true

    # Tomcat 7
        tomcat7_enabled: true
        tomcat7_hostname: localhost
        tomcat_catalina_port: 8080

    # Solr
        solr_cores: ['production','demo']
        solr_default_core: 'production'

    # AWS CREDENTIALS
    #AWS_ACCESS_KEY_ID: "{{ var_aws_access_key_id }}"
    #AWS_SECRET_ACCESS_KEY: "{{ var_aws_secret_access_key }}"

    #AWS_SES_USER: ""
    #AWS_SES_PASSWORD: ""

    # RUBY and RBENV
        rbenv:
          env: user
          version: v0.4.0
          ruby_version: 2.1.5
        rbenv_users: "{{ system_default_user }}"

    # Passenger wants to know.
        ruby_version: 2.1.5

    # SSL certs
        ssl_certs_common_name: "{{ansible_fqdn}}"

    roles:
#      - common
#      - hostname
#      - ssl
      #  - jdauphant.ssl-certs
#      - apache2
#      - oracle-java7
#      - go
#      - zzet.rbenv
#      - passenger
#      - tomcat7
#      - solr
      - fedora
      - { role: fluctus, force_update: yes}


    tasks:
    - name: Install required packages
      apt: name="{{ item }}" state=present
      with_items:
        - postgresql-client
        - libpq-dev
        - nodejs
        - sqlite3
        - libsqlite3-dev
