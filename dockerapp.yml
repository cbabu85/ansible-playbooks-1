-   hosts:
        - all
    vars_files:
      - "group_vars/vault.yml"

    vars_prompt:
      - name: dockerapp
        prompt: "What is the app name you are trying to deploy?"
        private: no

      - name: dockerapp_repo
        prompt: "What is the Git repo?"
        private: no

    vars:
        playbook_name: 'dockerapp'

        # Dockerapp config
        dockerapp: 'dockprom' #Docker app name
        dockerapp_path: "/srv/docker/{{dockerapp}}"
        dockerapp_repo: "https://github.com/stefanprodan/dockprom"

    roles:
      #      - {role: common, tags: common}
      #      - {role: ssl, tags: ssl}
      #   - {role: franklinkim.docker-compose, tags: docker-compose}
      #   - {role: mongrelion.docker, tags: docker}

    tasks:
      # 1. Make sure /srv/docker dir exists
      # 2. If apprepo defined, git clone into /srv/docker/appname/repo
      # 2.1 if apprepo defined, and git repo exists, run git pull in repo
      # 3. If apphub defined, just do a docker run
      - name: Setup dockerapp directory structure
        file:
          path: "{{item.0}}/{{item.1}}"
          owner: "{{system_default_user}}"
          group: "{{system_default_user}}"
          mode: 0755
          state: directory
        with_nested:
            - "{{dockerapp_path}}"
            - ['repo','data']
        tags: makdir

      - name: Git clone the {{dockerapp}} repo
        git:
          repo: "{{dockerapp_repo}}"
          dest: "{{dockerapp_path}}/repo"
          accept_hostkey: yes
          clone: yes
          force: yes
          update: yes
          umask: '0022'
        when: dockerapp_repo is defined

      - name: Start docker containers from compose
        docker_service:
           project_name: "{{dockerapp}}"
           project_src: "{{dockerapp_path}}/repo"
        tags: dockserv


