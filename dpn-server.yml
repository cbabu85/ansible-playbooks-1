---
# DPN Server 2.0
  - hosts:
      - dpn-demo2 #dpn-servers once 2.0 is status quo
      - dpn-prod2
    vars_files:
        - "group_vars/vault.yml"

    environment: "{{ruby_env}}"
    vars:
        playbook_name: dpn-server

        # Ansistrano Deployment
        ansistrano_deploy_to: "/var/www/{{ansible_fqdn}}/{{playbook_name}}"
        ansistrano_deploy_via: "git"
        ansistrano_git_repo: "git@github.com:dpn-admin/dpn-server.git"
        # This is tagged version 2.0.2
        ansistrano_git_branch: "2559169292b4e365f7399aeb6db43fe36947986d"
         # Note: key_path rewritten to support ssh key as variable not file.
        ansistrano_git_identity_key_path: "{{aptdeploy_sshkey_private}}"
        ansistrano_shared_paths: ["log"]
        ansistrano_keep_releases: 3
        # ansistrano_before_symlink_shared_tasks_file: "roles/dpn.dpn-server/tasks/before-symlink.yml"

        # DPN-Server Role
        dpnserver_app_root: "{{ ansistrano_deploy_to }}/current"
        dpnserver_environment: "{{ruby_env}}"

        # Postgresql privileges
#        postgresql_user_privileges:
#          - name: "{{dpnserver_db_user}}"
#            db: "{{dpnserver_db_name}}"       # database
#            priv: "ALL"    # privilege string format: example: INSERT,UPDATE/table:SELECT/anothertable:ALL
#            role_attr_flags: "CREATEDB" # role attribute flags
        # NGINX Webserver
        install_passenger: true
        nginx_vhosts:
          - listen: "443 ssl"
            server_name: "{{ansible_fqdn}}"
            root: "{{ ansistrano_deploy_to }}/current/public"
            access_log: "/var/log/nginx/{{ansible_fqdn}}_access.log"
            error_log: "/var/log/nginx/{{ansible_fqdn}}_error.log"
            extra_parameters: |
                passenger_enabled on;
                passenger_base_uri /;
                passenger_app_root {{ ansistrano_deploy_to }}/current;
                passenger_app_env {{ RAILS_ENV }};
                passenger_friendly_error_pages off;

                ssl    on;
                # SSL Chain if Nginx, SSL cert if Apache2
                ssl_certificate    {{ssl_cert_path}};
                ssl_certificate_key {{ ssl_key_path }};

        # RBenv
        rbenv:
          env: user
          version: v1.0.0
          ruby_version: 2.3.1
        rbenv_users: "{{system_default_user}}"

        #PSQL_BACKUP
        pg_hostname: "{{dpnserver_db_hostname}}"
        pg_username: "{{dpnserver_db_user}}"
        pg_pass: "{{dpnserver_db_pwd}}"
        pg_backup_dir: "/mnt/efs/dpn/psql_backup/"

    roles:
      - {role: common, tags: common}
      - {role: dpn-common, tags: dpn-common}
      - {role: zzet.rbenv, tags: rbenv}
      - {role: cd3ef.nginx, tags: [nginx, passenger, nginx-passenger]}
      - {role: carlosbuenosvinos.ansistrano-deploy, tags: deploy}
      - {role: dpn.dpn-server, tags: [dpn-server, deploy]}
      - {role: psql_backup, tags: [psqlbackup]}

    tasks:
    - name: Slack to all
      slack:
        token: "{{slack_token}}"
        msg: "{{playbook_name}} deployment on {{ inventory_hostname }} completed"
        icon_emoji: ":dog:"
        channel: 'ops'
      tags: [pharos,slack, deploy]
