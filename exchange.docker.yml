---
# Deploy on all exchange servers:
#  ansible-playbook exchange.yml -t deploy --diff
# Deploy on a specific exchange server:
#  ansible-playbook exchange.yml -t deploy --diff -l dpn-demo2
# Deploy a specific branch of exchange:
#  ansible-playbook exchange.yml -t deploy --diff -e ex_git_branch=<specific_branchname>
# Only rebuild go binaries, does not restart services.
#  ansible-playbook exchange.yml -t gobuild --diff
-   hosts:
      - docker4
    vars_files:
        - "group_vars/vault.yml"

    vars:
        playbook_name: exchange.docker
        # AWS.cli
        aws_access_key_id: "{{aws_access_key_ubuntu}}"
        aws_secret_access_key: "{{aws_secret_access_key_ubuntu}}"

        # DOCKER
        #        docker_version: 18.06.1-ce
        # dockerapp: 'exchange' #Docker app name

        # Note: If latest HEAD of branch, only provide branchname. If a custom git
        # hash, both branch and hash need to be defined. e.g.:
        #  git_branch: feature/two_factor #git branch/commit
        #  git_version: 37bd0d4ef31bcc3a6ed97dba57c299ec61dbea48
        git_branch: docker
    gather_facts: true

    roles:
      - {role: aptrust.common.docker, tags: common}
      - {role: aptrust.blockdevice.docker, tags: blockdev_docker}
      - {role: aws.cli, tags: aws_cli}
      - {role: aws.ebs_scale.docker, tags: ebs_scale_docker, setnitro}
      - {role: aptrust.exchange.docker, tags: [exchange, deploy]}
    tasks:

    - name: whoami
      become: no
      local_action: shell whoami
      register: whobrokeit
      tags: [exchange,slack,deploy]

    - name: Slack to all
      slack:
        token: "{{slack_token}}"
        msg: "Deployment of Exchange Release: *{{exchange_release}}-{{exchange_branch}}* in Environment: *{{GO_ENV}}* on {{ ansible.fqdn }} by user {{whobrokeit.stdout}} completed"
        icon_emoji: ":construction_worker:"
        channel: 'ops'
      tags: [exchange,slack,deploy]
