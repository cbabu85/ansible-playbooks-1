# - All other nodes:
# -- Automate setup nginx logformat and log per syslog
# -> nginx needs to add graylog logformat
# -- Automate setup syslog forwarder to Graylog
# -> as part of graylog deployment playbook as task
# --- Need to open ports for private subnets
# -- Automate setup pharos gelf gem and forward to logs (needs production ready setup)
# --- Need to open ports for private subnets
# - nginx: https://marketplace.graylog.org/addons/6b867cbe-8f5b-4fc9-84d2-fc1a75a0830d
# - nsq: https://marketplace.graylog.org/addons/775319b1-4737-42af-ae05-f8089727e7b8
# - nicetohave: https://marketplace.graylog.org/addons/962af1ae-dee3-400a-9207-7af2188fca49
# - look at dynamic inventory again...

  - hosts:
      - tmp-ebs-test2
      - docker2
    vars_files:
      - "group_vars/vault.yml"
    vars:
        playbook_name: 'graylog'

        # NGINX Webserver
        install_passenger: false
        content_security_policy: false
        install_reverse_proxy: true

        nginx_reverse_proxy_proxies:
          - config_name: graylog
            backend_name: graylog-web-backend
            backends:
              - localhost:9000
            # Currently only one supported due to certbot limit. Can't extract
            # multiple domains and pass into multiple '-d' params.
            domains:
              - logs.aptrust.org
            extra_params:
              - "proxy_set_header X-Graylog-Server-URL https://$server_name/api/;"
              - "proxy_set_header X-Forwarded-Host $host;"
              - "proxy_set_header X-Forwarded-Server $host;"
              - "proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;"

    roles:
      - {role: common, tags: common}
      - {role: aws.ebs_scale, tags: ebs_scale}
      - {role: cd3ef.nginx, tags: nginx}
      - {role: franklinkim.docker-compose, tags: docker-compose}
      - {role: mongrelion.docker, tags: docker}
      - {role: cd3ef.graylog-docker, tags: graylog}

    pre_tasks:
      - name: Set systems UDP receive buffer higher
        # Allow a 25MB UDP receive buffer
        #        net.core.rmem_max = 26214400
        shell: /bin/bash -lc "sysctl -w net.core.rmem_default=26214400"

        # https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html
      - name: Max_map_count for Elasticsearch production
        become: true
        shell: /bin/bash -ls "sysctl -w vm.max_map_count=262144"
    tasks:
      - name: Get ec2 metdata facts
        ec2_metadata_facts:
        tags: awss

    - debug:
        var: output
