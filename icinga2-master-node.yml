---
# This role installs icinga2 master for the monitoring nodes.

- hosts: apt-ops
  gather_facts: True
  vars_files:
      - "group_vars/vault.yml"
  vars:
      playbook_name: icinga2-master
      # Icinga2
      icinga2_master: True
      # TODO: Add to role as option
      icinga2_add_template: |
          template Host "RDS Instance"{
          check_command = "check_aws_rds"
          max_check_attempts = "3"
          check_interval = 1m
          retry_interval = 30s
          enable_notifications = true
          vars.slack_notifications = "enabled"
          enable_perfdata = true
          }

      # Slack integration
      icinga2_slack: true

      # Icingaweb2
      icingaweb2_local_db: False
      web_server_daemon: nginx
      icingaweb2_grafana_module: true

      # InfluxDB
      icinga2_local_db: False

      # Nginx
      install_php: true
      content_security_policy: false
      nginx_vhosts:
          - listen: "443 ssl"
            server_name: "icinga.aptrust.org"
            root: /usr/share/icingaweb2/public
            extra_parameters: |
              index index.php;
              location = /favicon.ico {
                  log_not_found off;
                  access_log off;
                  expires max;
              }
              location ~ /\. {
                  deny all;
                  access_log off;
                  log_not_found off;
              }

              location ~ \..*/.*\.php$ {
                  return 403;
              }
              if (!-d $request_filename) {
                rewrite ^/(.+)/$ /$1 permanent;
              }

              location / {
                try_files $1 $uri $uri/ /index.php$is_args$args;
              }

              location ~ ^/index\.php(.*)$ {
                fastcgi_index index.php;
                include /etc/nginx/fastcgi_params;
                try_files $uri =404;
                fastcgi_split_path_info ^(.+\.php)(/.+)$;
                fastcgi_pass unix:/var/run/php5-fpm.sock; #Replace with the port if php fpm is configured to run on port.
                fastcgi_param SCRIPT_FILENAME /usr/share/icingaweb2/public/index.php; #Replace with icinga2 web index.php file path.
                fastcgi_param ICINGAWEB_CONFIGDIR /etc/icingaweb2;
                fastcgi_param REMOTE_USER $remote_user;
              }
                ssl    on;
                # SSL Chain if Nginx, SSL cert if Apache2
                ssl_certificate    {{ssl_cert_path}};
                ssl_certificate_key {{ ssl_key_path }};

  roles:
    - {role: icinga2-ansible/icinga2-ansible-no-ui, tags: icinga2}
    - {role: ansible-influxdb, tags: influxdb}
    - {role: tersmitten.composer, tags: [composer, nginx], when: ansible_distribution_release == 'xenial'}
    - {role: cd3ef.nginx, tags: nginx}
    - {role: icinga2-ansible/icinga2-ansible-web2-ui, tags: icingaweb2}
  tasks:
    - name: Enable {{ item }} feature
      become: true
      shell: icinga2 feature enable "{{ item }}"
      with_items:
        - api
        - influxdb
        - notification
        - syslog
        - mainlog

# TODO: Add to role as option
    - name: Monitor RDS hosts
      blockinfile:
         dest: "/etc/icinga2/zones.d/master/hosts.conf"
         marker: "# {mark} ANSIBLE MANAGED BLOCK {{item.name}}"
         block: |
            object Host "{{item.name}}" {
                import "RDS Instance"
                display_name = "{{item.display_name}}"

                enable_notifications = true
                vars.aws_rds = true
                vars.aws_rds_instance = "{{item.rds_instance}}"
             }
      with_items:
          - { name: 'pharos_demo_rds', display_name: 'Pharos Demo DB',rds_instance: 'pharos-demo'}
          - { name: 'pharos_prod_rds', display_name: 'Pharos Prod DB',rds_instance: 'pharos-production'}
          - { name: 'dpn_demo_rds', display_name: 'DPN Demo DB',rds_instance: 'dpn-demo'}
          - { name: 'dpn_prod_rds', display_name: 'DPN Prod DB',rds_instance: 'dpn-production'}
          - { name: 'icinga2', display_name: 'Icinga2 Prod DB',rds_instance: 'icinga2'}
          - { name: 'Mediawiki', display_name: 'APT Wiki DB',rds_instance: 'mediawiki-production'}
      tags: add_rds_hosts

# TODO: Add NFS checks
