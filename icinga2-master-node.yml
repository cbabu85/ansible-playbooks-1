---
# This role installs icinga2 master for the monitoring nodes.

- hosts: apt-ops
  gather_facts: True
  vars_files:
      - "group_vars/vault.yml"
  vars:
      playbook_name: icinga2-master
      # Icinga2
      icinga2_conf_global: |
         include "constants.conf"
         include "zones.conf"
         include <itl>
         include <plugins>
         include <plugins-contrib>
         include "features-enabled/*.conf"

      # Slack integration
      icinga2_slack: true

      # Icingaweb2
      icingaweb2_local_db: False
      web_server_daemon: nginx

      # InfluxDB
      icinga2_local_db: False

      # Nginx
      install_php: true
      content_security_policy: false
      nginx_vhosts:
          - listen: "443 ssl"
            server_name: "icinga.aptrust.org"
            root: /usr/share/icingaweb2/public
            extra_parameters: |
              index index.php;
              location = /favicon.ico {
                  log_not_found off;
                  access_log off;
                  expires max;
              }
              location ~ /\. {
                  deny all;
                  access_log off;
                  log_not_found off;
              }

              location ~ \..*/.*\.php$ {
                  return 403;
              }
              if (!-d $request_filename) {
                rewrite ^/(.+)/$ /$1 permanent;
              }

              location / {
                try_files $1 $uri $uri/ /index.php$is_args$args;
              }

              location ~ ^/index\.php(.*)$ {
                fastcgi_index index.php;
                include /etc/nginx/fastcgi_params;
                try_files $uri =404;
                fastcgi_split_path_info ^(.+\.php)(/.+)$;
                fastcgi_pass unix:/var/run/php5-fpm.sock; #Replace with the port if php fpm is configured to run on port.
                fastcgi_param SCRIPT_FILENAME /usr/share/icingaweb2/public/index.php; #Replace with icinga2 web index.php file path.
                fastcgi_param ICINGAWEB_CONFIGDIR /etc/icingaweb2;
                fastcgi_param REMOTE_USER $remote_user;
              }
                ssl    on;
                # SSL Chain if Nginx, SSL cert if Apache2
                ssl_certificate    {{ssl_cert_path}};
                ssl_certificate_key {{ ssl_key_path }};

  roles:
    - {role: icinga2-ansible/icinga2-ansible-no-ui, tags: icinga2}
# TODO: Enable once config is in group_vars
    - {role: ansible-influxdb, tags: influxdb}
    - {role: tersmitten.composer, tags: [composer, nginx], when: ansible_distribution_release == 'xenial'}
    - {role: cd3ef.nginx, tags: nginx}
    - {role: icinga2-ansible/icinga2-ansible-web2-ui, tags: icingaweb2}
  tasks:
    - name: Enable {{ item }} feature
      become: true
      shell: icinga2 feature enable "{{ item }}"
      with_items:
        - api
        - influxdb
        - notification
        - syslog
        - mainlog
        - perfdata

    - name: Master node setup
      shell: icinga2 node setup --master --cn apt-ops.aptrust.org
      tags: masternodesetup

    - name: Create master and global zone directory
      file:
        path: "/etc/icinga2/zones.d/{{item}}"
        state: directory
        mode: 0755
        owner: nagios
        group: nagios
      with_items:
        - global
        - apt-ops.aptrust.org

    - name: Copy default config to global zone
      copy:
        src: "{{item}}"
        dest: "/etc/icinga2/zones.d/global/"
      with_fileglob:
           - /etc/icinga2/conf.d/*

    - name: Update zones.conf to master setup
      template:
        src: "~/aptrust/ansible-playbooks/roles/icinga2-ansible/icinga2-ansible-no-ui/templates/zones.conf"
        dest: /etc/icinga2/zones.conf
        mode: 0644
        owner: root
        group: root
      tags: zonefile
      ignore_errors: yes
      register: zoneresult

# TODO: Setup SLack notifications
    - name: Add apt key slack notification plugin
      apt_key:
        keyserver: keyserver.ubuntu.com
        id: 10779AB4
      tags: slacknotify

    - name: Add repo for slack notification plugin
      apt_repository:
        repo: deb https://raw.githubusercontent.com/nisabek/icinga2-slack-notifications/master/reprepro general main
        state: present
      tags: slacknotify

    - name: Install slack notification plugin
      apt:
        name: icinga2-slack-notifications
        state: latest
        update_cache: yes
      tags: slacknotify

    - name: Ensure that icinga features are enabled
      shell: icinga2 feature enable {{item}}
      with_items:
        - checker
        - notification
        - command
      tags: slacknotify


# TODO: Add RDS checks
# TODO: Add NFS checks

# Generate ticket on master to use for client nodes
# - hosts: "{{ masteritem | default('monitoring_servers')}}"
#  tags: ['nodeaction']
#  vars:
#   hostitem: apt-prod-repo.aptrust.org
#  tasks:
#   - name: generate ticket on the icinga master and save it as a variable
     # shell: /usr/sbin/icinga2 pki ticket --cn {{ masteritem }}
     #     shell: /usr/sbin/icinga2 pki ticket --cn {{ nodeitem }}.aptrust.org
     #  register: ticket
     # tags: nodeaction
